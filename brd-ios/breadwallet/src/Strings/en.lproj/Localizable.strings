/* App name */
"About.appName.android" = "BRD";
/* About screen blog label */
"About.blog" = "Blog";
/* About screen footer */
"About.footer" = "Made by the global BRD team. Version %1$@ Build %2$@";
/* Privay Policy button label */
"About.privacy" = "Privacy Policy";
/* About screen reddit label */
"About.reddit" = "Reddit";
/* Terms of Use button label */
"About.terms" = "Terms of Use";
/* About screen title */
"About.title" = "About";
/* About screen twitter label */
"About.twitter" = "Twitter";
/* About screen wallet ID label */
"About.walletID" = "BRD Rewards ID";
/* Close modal button accessibility label */
"AccessibilityLabels.close" = "Close";
/* Support center accessibiliy label */
"AccessibilityLabels.faq" = "Support Center";
/* Account balance */
"Account.balance" = "Balance";
/* Delisted token alert banner message */
"Account.delistedToken" = "This token has been delisted. \n\nYou may still be able to send these tokens to another platform. For more details, visit our support page.";
/* $10000 per BTC */
"Account.exchangeRate" = "%1$@ per %2$@";
/* Loading Wallet Message */
"Account.loadingMessage" = "Loading Wallet";
/* Prompt text for confirmation dialog for Hedera account creation */
"AccountCreation.body" = "Only create a Hedera account if you intend on storing HBAR in your wallet.";
/* Label for create Hedera account button */
"AccountCreation.create" = "Create Account";
/* Creating Account progress Label */
"AccountCreation.creating" = "Creating Account";
/* Error message for Hedera account creation failure */
"AccountCreation.error" = "An error occurred during account creation. Please try again later.";
/* Label for cancel button on confirmation dialog for Hedera account creation */
"AccountCreation.notNow" = "Not Now";
/* Creating Account progress Label */
"AccountCreation.timeout" = "The Request timed out. Please try again later.";
/* Title for confirmation dialog for Hedera account creation */
"AccountCreation.title" = "Confirm Account Creation";
/* Default wallet name */
"AccountHeader.defaultWalletName" = "My BRD";
/* Third party keyboard warning */
"Alert.customKeyboard.android" = "It looks like you are using a third-party keyboard, which can record what you type and steal your Recovery Phrase. Please switch to the default Android keyboard for extra protection.";
/* Error alert title */
"Alert.error" = "Error";
/* Keystore error */
"Alert.keystore.generic.android" = "There is a problem with your Android OS keystore, please contact support@brd.com";
/* KeyStore error, keys are invalidated */
"Alert.keystore.invalidated.android" = "Your BRD encrypted data was recently invalidated because your Android lock screen was disabled.";
/* Warn user key store data has been invalidate because the user changed their security settings. The user must uninstall. */
"Alert.keystore.invalidated.uninstall.android" = "We can't proceed because your screen lock settings have been changed (e.g. password was disabled, fingerprints were changed). For security purposes, Android has permanently locked your key store. Therefore, your BRD app data must be wiped by uninstalling.\n\nDon’t worry, your funds are still secure! Reinstall the app and recover your wallet using your recovery phrase.";
/* Warn user key store data has been invalidate because the user changed their security settings. The user must wipe their app data. */
"Alert.keystore.invalidated.wipe.android" = "We can't proceed because your screen lock settings have been changed (e.g. password was disabled, fingerprints were changed). For security purposes, Android has permanently locked your key store. Therefore, your BRD app data must be wiped.\n\nDon’t worry, your funds are still secure! Recover your wallet using your recovery phrase.";
/* Keystore error title */
"Alert.keystore.title.android" = "Android Key Store Error";
/* No internet alert message */
"Alert.noInternet" = "No internet connection found. Check your connection and try again.";
/* General error message */
"Alert.somethingWentWrong" = "Something went wrong. Please try again.";
/* Request timed out error message */
"Alert.timedOut" = "Request timed out. Check your connection and try again.";
/* Warning alert title */
"Alert.warning" = "Warning";
/* 'the addresses were copied'' Alert title */
"Alerts.copiedAddressesHeader" = "Addresses Copied";
/* Addresses Copied Alert sub header */
"Alerts.copiedAddressesSubheader" = "All wallet addresses successfully copied.";
/* Alert Header Label (the paper key was set) */
"Alerts.paperKeySet" = "Recovery Phrase Set";
/* Alert Subheader label (playfully positive) */
"Alerts.paperKeySetSubheader" = "Awesome!";
/* Alert Header label (the PIN was set) */
"Alerts.pinSet" = "PIN Set";
/* Send failure alert header label (the send failed to happen) */
"Alerts.sendFailure" = "Send failed";
/* Send success alert header label (confirmation that the send happened) */
"Alerts.sendSuccess" = "Send Confirmation";
/* Send success alert subheader label (e.g. the money was sent) */
"Alerts.sendSuccessSubheader" = "Money Sent!";
/* Fingerprint was recognized by the scanner */
"Alerts.touchIdSucceeded.android" = "Fingerprint recognized";
/* The "home" screen is the name of the top level menu for the app. */
"Android.BCH.welcome.message" = "Any BCH in your wallet can be accessed through the home screen.";
/* Tell the user where they can enable permissions to access device storage. */
"Android.allowFileSystemAccess" = "Please enable storage permissions in your device settings: \"Settings\" > \"Apps\" > \"BRD\" > \"Permissions\".";
/* Warning about using apps that can alter the screen */
"Android.screenAlteringMessage" = "We've detected an app that is incompatible with BRD running on your device. For security reasons, please disable any screen altering or light filtering apps to proceed.";
/* An app that alters the screen ("screen-altering app") has been detected. */
"Android.screenAlteringTitle" = "Screen Altering App Detected";
/* JSON Serialization error message */
"ApiClient.jsonError" = "JSON Serialization Error";
/* Wallet not ready error message */
"ApiClient.notReady" = "Wallet not ready";
/* API Token error message */
"ApiClient.tokenError" = "Unable to retrieve API token";
/* Send BCH view body. */
"BCH.body" = "Enter a destination BCH address below. All BCH in your wallet at the time of the fork (%1$@) will be sent.";
/* Confirm sending <$5.00> to <address>? */
"BCH.confirmationMessage" = "Confirm sending %1$@ to %2$@";
/* Confirmation alert title */
"BCH.confirmationTitle" = "Confirmation";
/* Generic bch erorr message */
"BCH.genericError" = "Your account does not contain any BCH, or you received BCH after the fork.";
/* Transaction ID copied message */
"BCH.hashCopiedMessage" = "Transaction ID copied";
/* No address error message */
"BCH.noAddressError" = "Please enter an address";
/* Attempted to scan unsupported qr code error message. */
"BCH.paymentProtocolError" = "Payment Protocol Requests are not supported for BCH transactions";
/* BCH successfully sent alert message */
"BCH.successMessage" = "BCH was successfully sent.";
/* Widthdraw BCH view title */
"BCH.title" = "Withdraw BCH";
/* Tx Hash button header */
"BCH.txHashHeader" = "BCH Transaction ID";
/* Approve button label */
"BitID.approve" = "Approve";
/* <sitename> is requesting authentication using your bitcoin wallet */
"BitID.authenticationRequest" = "%1$@ is requesting authentication using your bitcoin wallet";
/* Deny button label */
"BitID.deny" = "Deny";
/* BitID error alert title */
"BitID.error" = "Authentication Error";
/* BitID error alert messaage (The payment service you are trying to use isn't working. Please contact them, as you may need to try again) */
"BitID.errorMessage" = "Please check with the service. You may need to try again.";
/* BitID success alert title */
"BitID.success" = "Successfully Authenticated";
/* BitID Authentication Request alert view title */
"BitID.title" = "BitID Authentication Request";
/* Button to return to the "home" screen (the home screen is the top menu). */
"Button.Home" = "Home";
/* As in "(tap here to) buy (bitcoin)" */
"Button.buy" = "Buy";
/* Cancel button label */
"Button.cancel" = "Cancel";
/* Confirm button title */
"Button.confirm" = "Confirm";
/* Button label to open a email compose window with our support email in the to field. */
"Button.contactSupport.android" = "Contact Support";
/* prompt continue button */
"Button.continueAction" = "Continue";
/* prompt dismiss button */
"Button.dismiss" = "Dismiss";
/* Done button title */
"Button.done" = "Done";
/* Ignore button label */
"Button.ignore" = "Ignore";
/* Maybe Later button label */
"Button.maybeLater" = "Maybe Later";
/* menu button */
"Button.menu" = "Menu";
/* More information button */
"Button.moreInfo" = "More info";
/* No button */
"Button.no" = "No";
/* OK button label */
"Button.ok" = "OK";
/* Open Settings button */
"Button.openSettings" = "Open Settings";
/* receive button */
"Button.receive" = "Receive";
/* Button label to open Security Settings. */
"Button.securitySettings.android" = "Security Settings";
/* Click this button to sell an asset */
"Button.sell" = "Sell";
/* send button */
"Button.send" = "Send";
/* Settings button label */
"Button.settings" = "Settings";
/* Setup button label */
"Button.setup" = "Set Up";
/* Skip button title */
"Button.skip" = "Skip";
/* Settings button label */
"Button.submit" = "Submit";
/* Button label to uninstall the app. */
"Button.uninstall.android" = "Uninstall";
/* Button label to wipe the user's application data. */
"Button.wipe.android" = "Wipe";
/* Yes button */
"Button.yes" = "Yes";
/* Camera plugin instruction */
"CameraPlugin.centerInstruction" = "Center your ID in the box";
"CloudBackup.backupDeleted" = "Backup Erased";
"CloudBackup.backupDeletedMessage" = "Your iCloud backup has been erased after too many failed PIN attempts. The app will now restart.";
"CloudBackup.backupMenuTitle" = "iCloud Backup";
"CloudBackup.createButton" = "Create new wallet";
"CloudBackup.createWarning" = "A previously backed up wallet has been detected. Using this backup is recomended. Are you sure you want to proceeed with creating a new wallet?";
"CloudBackup.enableBody1" = "iCloud Keychain must be turned on for this feature to work.";
"CloudBackup.enableBody2" = "It should look like the following:";
"CloudBackup.enableButton" = "I have turned on iCloud Keychain";
"CloudBackup.enableTitle" = "Enable Keychain";
"CloudBackup.encryptBackupMessage" = "Enter pin to encrypt backup";
"CloudBackup.mainBody" = "Please note, iCloud backup is only as secure as your iCloud account. We still recommend writing down your recovery phrase in the following step and keeping it secure. The recovery phrase is the only way to recover your wallet if you can no longer access iCloud.";
"CloudBackup.mainTitle" = "iCloud Recovery Backup";
"CloudBackup.mainWarning" = "iCloud Keychain must be turned on in the iOS Settings app for this feature to work";
"CloudBackup.mainWarningConfirmation" = "Are you sure you want to disable iCloud Backup? This will delete your backup from all devices.";
"CloudBackup.pinAttempts" = "Attempts remaining before erasing backup: %1$@";
"CloudBackup.recoverButton" = "Restore from Recovery Phrase";
"CloudBackup.recoverHeader" = "Enter PIN to unlock iCloud backup";
"CloudBackup.restoreButton" = "Restore from iCloud Backup";
"CloudBackup.selectTitle" = "Choose Backup";
"CloudBackup.step1" = "Launch the Settings app.";
"CloudBackup.step2" = "Tap your Apple ID name.";
"CloudBackup.step3" = "Tap iCloud.";
"CloudBackup.step4" = "Verify that iCloud Keychain is ON";
"CloudBackup.understandText" = "I understand that this feature will not work unless iCloud Keychain is enabled.";
"CloudBackup.warningBody" = "Your iCloud backup will be erased after %1$@ more incorrect PIN attempts.";
"ConfirmGift.paperWalletAmount" = "Paper Wallet Amount";
"ConfirmGift.processingTime" = "Validating this paper wallet on the network may take up to 60 minutes";
/* Confirm paper phrase error message */
"ConfirmPaperPhrase.error" = "The words entered do not match your recovery phrase. Please try again.";
/* Confirm paper phrase view label. */
"ConfirmPaperPhrase.label" = "To make sure everything was written down correctly, please enter the following words from your recovery phrase.";
/* Word label eg. Word #1, Word #2 */
"ConfirmPaperPhrase.word" = "Word #%1$@";
/* Amount to Send: ($1.00) */
"Confirmation.amountLabel" = "Amount to Send:";
"Confirmation.destinationTag" = "Destination Tag";
"Confirmation.destinationTag_EmptyHint" = "(empty)";
/* Network Fee: */
"Confirmation.feeLabel" = "Network Fee:";
/* Network Fee: (ETH) */
"Confirmation.feeLabelETH" = "Network Fee (ETH):";
/* Label for Hedera Memo field on transaction confirmation screen */
"Confirmation.hederaMemo" = "Hedera Memo";
/* eg. Processing time: This transaction is predicted to complete in [10-60 minutes]. */
"Confirmation.processingTime" = "Processing time: This transaction is predicted to complete in %1$@.";
/* Label for "send" button on final confirmation screen */
"Confirmation.send" = "Send";
/* Confirmation Screen title */
"Confirmation.title" = "Confirmation";
/* To: (address) */
"Confirmation.to" = "To";
/* Total Cost: ($5.00) */
"Confirmation.totalLabel" = "Total Cost:";
"CreateGift.amountLabel" = "Choose amount ($USD)";
"CreateGift.create" = "Create";
"CreateGift.customAmountHint" = "Custom amount ($500 max)";
"CreateGift.description" = "We'll create what's called a ";
"CreateGift.inputAmountError" = "You must select a gift amount.";
"CreateGift.inputRecipientNameError" = "You must enter the name of the recipient.";
"CreateGift.insufficientBalanceError" = "You have insufficient funds to send a gift.";
"CreateGift.insufficientBalanceForAmountError" = "You have insufficient funds to send a gift of this amount.";
"CreateGift.recipientName" = "Recipient's name";
"CreateGift.serverError" = "A server error occurred. Please try again later.";
"CreateGift.subtitle" = "Send bitcoin to someone even if they don't have a wallet.";
"CreateGift.title" = "Give the Gift of Bitcoin";
"CreateGift.unexpectedError" = "An unexpected error occurred. Please contact support.";
/* Agree to legal terms button */
"Crowdsale.agree" = "Agree";
/* As in "(tap here to) buy (some) tokens" */
"Crowdsale.buyButton" = "Buy Tokens";
/* Decline to legal terms button */
"Crowdsale.decline" = "Decline";
/* Resume Idnetify verification button */
"Crowdsale.resume" = "Resume Verification";
/* Retry Identity verification button */
"Crowdsale.retry" = "Retry";
/* Bitcoin denomination picker label */
"DefaultCurrency.bitcoinLabel" = "Bitcoin Display Unit";
/* Exchange rate label */
"DefaultCurrency.rateLabel" = "Exchange Rate";
/* The wallet is disabled. */
"Disabled.title" = "Wallet disabled";
/* Service capabilities description */
"EME.permissions.accountRequest" = "Request %1$@ account information";
/* Service capabilities description */
"EME.permissions.callRequest" = "Request %1$@ smart contract call";
/* Service capabilities description */
"EME.permissions.paymentRequest" = "Request %1$@ payment";
/* Share address by e-mail subject */
"Email.address_subject" = "%1$@ Address";
/* Email unavailable alert title */
"ErrorMessages.emailUnavailableMessage" = "This device isn't configured to send email with the iOS mail app.";
/* Email unavailable alert title */
"ErrorMessages.emailUnavailableTitle" = "Email Unavailable";
/* Message that gets shown when we've detected the user has encountered the looping lock-screen bug. (preserve [ ] characters) */
"ErrorMessages.loopingLockScreen.android" = "BRD can not be authenticated due to a bug in your version of Android. [Please tap here for more information.]";
/* Messaging unavailable alert title */
"ErrorMessages.messagingUnavailableMessage" = "This device isn't configured to send messages.";
/* Messaging unavailable alert title */
"ErrorMessages.messagingUnavailableTitle" = "Messaging Unavailable";
/* Fingerprint was not recognized by the scanner, please try scanning again */
"ErrorMessages.touchIdFailed.android" = "Fingerprint not recognized. Please try again.";
"Exchange.Browser.orderHistoryTitle" = "Order History";
"Exchange.Browser.rewardsTitle" = "Rewards";
/* CTA button title exchange screen */
"Exchange.CTA.loading" = "Loading ...";
/* CTA button title exchange screen */
"Exchange.CTA.next" = "Next";
/* CTA button title exchange screen */
"Exchange.CTA.preview" = "Preview";
/* CTA button processing state */
"Exchange.CTA.processing" = "Processing ...";
/* CTA button title exchange screen */
"Exchange.CTA.retry" = "Retry";
/* CTA action exchange to set to max trade amount */
"Exchange.CTA.setMax" = "Set amount to max %@";
/* CTA action exchange to set to min trade amount
CTA action exchange to set to min trade amount */
"Exchange.CTA.setMin" = "Set amount to min %@";
/* Transaction error alert body */
"Exchange.ErrorState.CreateTransferFailed" = "Create transfer failed";
/* Transaction error alert body */
"Exchange.ErrorState.feeEstimateFailed" = "Fee Estimate Failed";
/* Initialization error alert body */
"Exchange.ErrorState.initialization" = "Initialization error";
/* Insufficient chain error alert body */
"Exchange.ErrorState.insufficientNativeBalanceError" = "%1$@ uses the %2$@ network which requires %3$@ to pay transaction fees.";
/* Insufficient chain error alert ok action */
"Exchange.ErrorState.insufficientNativeBalanceErrorConfirm" = "Top up %1$@ balance";
"Exchange.ErrorState.insufficientNativeBalanceErrorSecondary" = "Network fee of %1$@ %2$@ required.";
/* Insufficient chain error alert title */
"Exchange.ErrorState.insufficientNativeBalanceErrorTitle" = "%1$@ Balance Low";
/* Transaction error alert body */
"Exchange.ErrorState.insufficientNativeWalletBalance" = "Insufficient %1$@ native wallet balance, you will need at least %1$@ to proceed.";
/* Network error alert body */
"Exchange.ErrorState.network" = "Network error";
/* Order error alert body */
"Exchange.ErrorState.order" = "Order error";
/* Transaction error alert body */
"Exchange.ErrorState.transaction" = "Transaction error";
/* Unknown error alert body */
"Exchange.ErrorState.unknown" = "Unknown error";
/* Region error alert body */
"Exchange.ErrorState.unsupportedRegionError" = "Region you selected is not supported, please select different region";
/* Promotion CTA */
"Exchange.FeaturePromotion.CTA" = "Let's see it!";
/* Buy promotion body */
"Exchange.FeaturePromotion.buyBody" = "There's no better time to invest than today with our streamlined new interface.";
/* Buy promotion title */
"Exchange.FeaturePromotion.buyTitle" = "Buy & sell is now easier than ever!";
/* Trade promotion body */
"Exchange.FeaturePromotion.tradeBody" = "Trade your assets into another with just a few taps. Walk and trade baby!";
/* Trade promotion title */
"Exchange.FeaturePromotion.tradeTitle" = "Trading assets is now even easier!";
/* Empty wallet message body */
"Exchange.FullScreenErrorState.emptyWalletBody" = "It looks like you don’t have any assets in your wallet to sell yet.";
/* CTA title for empty wallet trade screen */
"Exchange.FullScreenErrorState.emptyWalletCTA" = "Buy Now";
/* Empty wallet message title */
"Exchange.FullScreenErrorState.emptyWalletTitle" = "Your wallet is empty";
/* Selling unavailable message */
"Exchange.FullScreenErrorState.sellingNoAssetsBody" = "Looks like you’re not holding assets that can be sold yet.";
/* Selling unavailable CTA */
"Exchange.FullScreenErrorState.sellingNoAssetsCTA" = "Buy now";
/* Selling unavailable message title */
"Exchange.FullScreenErrorState.sellingNoAssetsTitle" = "No assets to sell";
/* Selling unavailable message */
"Exchange.FullScreenErrorState.sellingUnavailableBody" = "We don’t have a partner that supports selling to %1$@ in %2$@ yet.";
/* Selling unavailable CTA */
"Exchange.FullScreenErrorState.sellingUnavailableCTA" = "Change location / currency";
/* Selling unavailable message title */
"Exchange.FullScreenErrorState.sellingUnavailableTitle" = "Selling Unavailable";
/* InputError BalanceLow text */
"Exchange.InputError.BalanceLow" = "Insufficient balance";
/* "CTA button label */
"Exchange.Order.CTA.great" = "Great!";
/* "View receipt */
"Exchange.Order.CTA.receipt" = "View Receipt";
/* Receipt item label bought */
"Exchange.Order.bought" = "Bought";
/* Receipt item label delivery */
"Exchange.Order.delivery" = "Delivery";
/* Receipt item label fees */
"Exchange.Order.fees" = "Fees";
/* Order footer info explaining exchange rate estimate */
"Exchange.Order.footer" = "This is an estimate. The amount you will receive will depend on the market conditions. These details can be found in your trade history screen.";
/* Receipt item label for */
"Exchange.Order.for" = "For";
/* Receipt item label method */
"Exchange.Order.method" = "Method";
/* Status creating order */
"Exchange.Order.status.creating" = "Creating order";
/* Status failed order */
"Exchange.Order.status.failed" = "Order failed";
/* Status processing order */
"Exchange.Order.status.processing" = "Processing";
/* Status sent order */
"Exchange.Order.status.sent" = "Order sent!";
/* Status successful order */
"Exchange.Order.status.successful" = "Order Successful!";
/* Trade preview CTA */
"Exchange.Preview.CTA" = "Trade Now";
/* Rewards status active */
"Exchange.Preview.active" = "Active";
/* Trade preview footer */
"Exchange.Preview.footer" = "This is an estimate. The amount you will receive will depend on the market conditions.";
/* Trade preview info item label */
"Exchange.Preview.fulfilledBy" = "Fulfilled by";
/* Rewards status inactive */
"Exchange.Preview.inactive" = "Inactive";
/* Rewards info */
"Exchange.Preview.info" = "Hold 1000 BRD and receive 25% off trading fees ";
/* Trade preview info item label */
"Exchange.Preview.networkFee" = "Network Fee";
/* Trade preview info item label */
"Exchange.Preview.partnerFee" = "Partner Fee";
/* Trade preview info item label */
"Exchange.Preview.rate" = "Rate";
/* Preview items rewards label */
"Exchange.Preview.rewards" = "BRD Rewards";
/* Trade preview navigation title */
"Exchange.Preview.title" = "Trade preview";
/* CTA button title for region settings */
"Exchange.Settings.applyRegion" = "Apply region";
/* County label */
"Exchange.Settings.country" = "Country";
/* Currency label */
"Exchange.Settings.currency" = "Display Currency";
/* Region label */
"Exchange.Settings.region" = "State";
/* Region settings screen title */
"Exchange.Settings.title" = "Set Region";
/* Crypto transfer error description */
"Exchange.TransferError.confirmation" = "Failed to confirm transaction";
/* Crypto transfer error description */
"Exchange.TransferError.loadInput" = "Failed to load input";
/* Crypto transfer error description */
"Exchange.TransferError.noFeeBasis" = "Failed with no fee bases error";
/* Crypto transfer error description */
"Exchange.TransferError.pinVerifier" = "Failed to verify pin";
/* Crypto transfer error description */
"Exchange.TransferError.sendResult" = "Failed send transaction with error %@";
/* Crypto transfer error description */
"Exchange.TransferError.transactionValidation" = "Failed transaction validation with %@";
/* Crypto transfer error description */
"Exchange.TransferError.validateCurrencyOrAddress" = "Failed to validate currency or address";
/* Exchange available balance label */
"Exchange.available" = "Available: %@";
/* Exchange buy title */
"Exchange.buy" = "Buy";
/* Exchange label from */
"Exchange.from" = "From";
/* purchase limit */
"Exchange.limit" = "limit";
/* Loading available crypto assets */
"Exchange.loadingAssets" = "Loading Assets";
/* Exchange fee title */
"Exchange.offer.fees" = "Fee";
/* Loading offers subtitle */
"Exchange.offer.gatheringSubtitle" = "Fetching partner rates";
/* Loading offers title */
"Exchange.offer.gatheringTitle" = "One moment...";
/* Initializing offers title */
"Exchange.offer.initTitle" = "Offers will appear here";
/* Offer subtitle limit max */
"Exchange.offer.limitMax" = "Limit max";
/* Offer subtitle limit min */
"Exchange.offer.limitMin" = "Limit min";
/* Offer subtitle set max amount */
"Exchange.offer.maxAmount" = "Maximum amount";
/* Offer subtitle set min amount */
"Exchange.offer.minAmount" = "Minimum amount";
/* Network fee label */
"Exchange.offer.networkFee" = "Network Fee";
/* No offers subtitle */
"Exchange.offer.noneSubtitle" = "Try another amount";
/* No offers title */
"Exchange.offer.noneTitle" = "No offers available";
/* Offers navigation title */
"Exchange.offer.offers" = "Offers";
/* Processing fee label */
"Exchange.offer.processingFee" = "Processing Fee";
/* Provider fee label */
"Exchange.offer.providerFee" = "Provider Fee";
/* Exchange rate */
"Exchange.offer.rate" = "Rate";
/* Offers section title */
"Exchange.offer.sectionTitle" = "All values displayed are estimates and susceptible to market price fluctuations.";
/* Offer total */
"Exchange.offer.total" = "Total";
/* Over the min limit */
"Exchange.over" = "Over";
/* Exchange select asset button label */
"Exchange.selectAsset" = "Select Asset";
/* Exchange sell title */
"Exchange.sell" = "Sell";
/* Exchange label to */
"Exchange.to" = "To";
/* Exchange trade title */
"Exchange.trade" = "Trade";
/* Trade cancel alert body */
"Exchange.tradeCancelAlertBody" = "View order details in Menu -> Order History";
/* Trade cancel alert no button */
"Exchange.tradeCancelAlertNo" = "No";
/* Trade cancel alert title */
"Exchange.tradeCancelAlertTitle" = "Exit Checkout?";
/* Trade cancel alert yes button */
"Exchange.tradeCancelAlertYes" = "Yes";
/* Under the min limit */
"Exchange.under" = "Under";
/* Offer purchase method ACH */
"Exchange.viaACH" = "%@ via ACH";
/* Offer purchase method card */
"Exchange.viaCard" = "%@ via Card";
/* Offer purchase method crypto */
"Exchange.viaCrypto" = "%@ via Crypto";
/* Offer purchase method SEPA */
"Exchange.viaSEPA" = "%@ via SEPA";
/* Exchange label with */
"Exchange.with" = "With";
"ExportConfirmation.cancel" = "Cancel";
"ExportConfirmation.continue" = "Continue";
"ExportConfirmation.message" = "This will generate a CSV file including all completed transactions from all enabled wallets.";
"ExportConfirmation.title" = "Export transactions?";
/* "Export transfers body" */
"ExportTransfers.body" = "This will generate a CSV file including all completed transactions from all enabled wallets.";
/* "Export transfers button" */
"ExportTransfers.confirmExport" = "Export Transfers";
/* "Export dialog error message" */
"ExportTransfers.exportFailedBody" = "Failed to export CSV file, please try again.";
/* "Export dialog error title" */
"ExportTransfers.exportFailedTitle" = "Export Failed";
/* "Export transfers header" */
"ExportTransfers.header" = "Export transactions?";
/* You can customize your Face ID Spending Limit from the [menu] */
"FaceIDSettings.customizeText" = "You can customize your Face ID spending limit from the %1$@.";
/* Text describing the purpose of the Face ID settings in the BRD app. */
"FaceIDSettings.explanatoryText" = "Use Face ID to unlock your BRD app and send money.";
/* Face Id screen label */
"FaceIDSettings.label" = "Use your face to unlock your BRD and send money up to a set limit.";
/* Title of the screen for setting the Face ID Spending Limit */
"FaceIDSettings.linkText" = "Face ID Spending Limit Screen";
/* Setting to turn on Face ID for BRD */
"FaceIDSettings.switchLabel" = "Enable Face ID for BRD";
/* Face ID settings view title */
"FaceIDSettings.title" = "Face ID";
/* Text label for a toggle that enables Face ID for sending money. */
"FaceIDSettings.transactionsTitleText" = "Enable Face ID to send money";
/* Instructions on how to turn on face id on the iPhone. Please ensure the name of the menu in this string matches the wording Apple uses in the iPhone menu. */
"FaceIDSettings.unavailableAlertMessage" = "You have not set up Face ID on this device. Go to Settings->Face ID & Passcode to set it up now.";
/* Face ID unavailable alert title */
"FaceIDSettings.unavailableAlertTitle" = "Face ID Not Set Up";
/* Text label for a toggle that enables Face ID for unlocking the BRD app. */
"FaceIDSettings.unlockTitleText" = "Enable Face ID to unlock BRD";
/* Face Id spending limit screen title */
"FaceIDSpendingLimit.title" = "Face ID Spending Limit";
/* Economy fee */
"FeeSelector.economy" = "Economy";
/* E.g. [This transaction is predicted to complete in] 1-24 hours */
"FeeSelector.economyTime" = "1-24 hours";
/* Warning message for economy fee */
"FeeSelector.economyWarning" = "This option is not recommended for time-sensitive transactions.";
/* E.g. Estimated delivery: 10-60 minutes */
"FeeSelector.estimatedDeliver" = "Estimated Delivery: %1$@";
/* [This transaction will complete in] 2-5 minutes */
"FeeSelector.ethTime" = "2-5 minutes";
"FeeSelector.lessThanMinutes" = "<%1$d minutes";
/* Priority fee */
"FeeSelector.priority" = "Priority";
/* E.g. [This transaction is predicted to complete in] 10-30 minutes */
"FeeSelector.priorityTime" = "10-30 minutes";
/* Regular fee */
"FeeSelector.regular" = "Regular";
/* E.g. [This transaction is predicted to complete in] 10-60 minutes */
"FeeSelector.regularTime" = "10-60 minutes";
/* Fee Selector title */
"FeeSelector.title" = "Processing Speed";
/* Label for the Android file chooser when we need to prompt the user to select an image file. */
"FileChooser.selectImageSource.android" = "Select Image Source";
/* Fingerprint authentication settings screen description */
"FingerprintSettings.description" = "Use your fingerprint to unlock your BRD app and send transactions.";
/* Switch label to enable fingerprint authentication to send money */
"FingerprintSettings.sendMoney" = "Use fingerprint to send money";
/* Fingerprint authentication settings sceen title */
"FingerprintSettings.title" = "Fingerprint";
/* Switch label to enable fingerprint authentication to unlock BRD app */
"FingerprintSettings.unlockApp" = "Use fingerprint to unlock BRD";
/* This is the section that allows administration of the user's wallet */
"HomeScreen.admin" = "Admin";
/* "home screen toolbar button */
"HomeScreen.buy" = "Buy";
/* home screen toolbar 'Buy & Sell' button */
"HomeScreen.buyAndSell" = "Buy & Sell";
/* "home screen toolbar button */
"HomeScreen.menu" = "Menu";
/* This section lists the users wallets */
"HomeScreen.portfolio" = "Wallets";
/* Label for the total balance of all the user's assets (style is all lower case if your language permits) */
"HomeScreen.totalAssets" = "Total Assets";
/* "home screen toolbar button */
"HomeScreen.trade" = "Trade";
/* Duplicate key error message */
"Import.Error.duplicate" = "This private key is already in your wallet.";
/* empty private key error message */
"Import.Error.empty" = "This private key is empty.";
/* High fees error message */
"Import.Error.highFees" = "Transaction fees would cost more than the funds available on this private key.";
/* Not a valid private key error message */
"Import.Error.notValid" = "Not a valid private key";
/* Import signing error message */
"Import.Error.signing" = "Error signing transaction";
/* Successfully imported wallet message body */
"Import.SuccessBody" = "Successfully imported wallet.";
/* Checking private key balance progress view text */
"Import.checking" = "Checking private key balance...";
/* Sweep private key confirmation message */
"Import.confirm" = "Send %1$@ from this private key into your wallet? The bitcoin network will receive a fee of %2$@.";
/* [Redeem] the funds stored on this private key. */
"Import.importButton" = "Import";
/* Importing wallet progress view label */
"Import.importing" = "Importing Wallet";
/* Caption for graphics */
"Import.leftCaption" = "Wallet to be imported";
/* Import wallet intro screen message */
"Import.message" = "Importing a wallet transfers all the money from your other wallet into your BRD wallet using a single transaction.";
/* Enter password alert view title */
"Import.password" = "This private key is password protected.";
/* password textfield placeholder */
"Import.passwordPlaceholder" = "password";
/* Caption for graphics */
"Import.rightCaption" = "Your BRD Wallet";
/* Scan Private key button label */
"Import.scan" = "Scan Private Key";
/* Import wallet success alert title */
"Import.success" = "Success";
/* Import Wallet screen title */
"Import.title" = "Import Wallet";
/* Unlocking Private key activity view message. */
"Import.unlockingActivity" = "Unlocking Key";
/* Import wallet intro warning message */
"Import.warning" = "Importing a wallet does not include transaction history or other details.";
/* Wrong password alert message */
"Import.wrongPassword" = "Wrong password, please try again.";
/* Close app button */
"JailbreakWarnings.close" = "Close";
/* Ignore jailbreak warning button */
"JailbreakWarnings.ignore" = "Ignore";
/* Jailbreak warning message */
"JailbreakWarnings.messageWithBalance" = "DEVICE SECURITY COMPROMISED\n Any 'jailbreak' app can access BRD's keychain data and steal your bitcoin! Wipe this wallet immediately and restore on a secure device.";
/* Jailbreak warning message */
"JailbreakWarnings.messageWithoutBalance" = "DEVICE SECURITY COMPROMISED\n Any 'jailbreak' app can access BRD's keychain data and steal your bitcoin. Please only use BRD on a non-jailbroken device.";
/* Jailbreak warning title */
"JailbreakWarnings.title" = "WARNING";
/* Wipe wallet button */
"JailbreakWarnings.wipe" = "Wipe";
/* Approve link wallet button label */
"LinkWallet.approve" = "Approve";
/* Decline link wallet button label */
"LinkWallet.decline" = "Decline";
/* Link Wallet view dislaimer footer */
"LinkWallet.disclaimer" = "External apps cannot send money without approval from this device";
/* Link Wallet view title above domain list */
"LinkWallet.domainTitle" = "Note: ONLY interact with this app when on one of the following domains";
/* Link wallet logo footer text */
"LinkWallet.logoFooter" = "Secure Checkout";
/* Link Wallet view title above permissions list */
"LinkWallet.permissionsTitle" = "This app will be able to:";
/* Link Wallet view title */
"LinkWallet.title" = "Link Wallet";
/* Location services disabled error */
"LocationPlugin.disabled" = "Location services are disabled.";
/* No permissions for location services */
"LocationPlugin.notAuthorized" = "BRD does not have permission to access location services.";
/* Wallet creation date prefix */
"ManageWallet.creationDatePrefix" = "You created your wallet on %1$@";
/* Manage wallet description text */
"ManageWallet.description" = "Your wallet name only appears in your account transaction history and cannot be seen by anyone else.";
/* Change Wallet name textfield label */
"ManageWallet.textFeildLabel" = "Wallet Name";
/* Manage wallet modal title */
"ManageWallet.title" = "Manage Wallet";
"MarketData.high24h" = "24h high";
"MarketData.low24h" = "24h low";
"MarketData.marketCap" = "Market Cap";
"MarketData.volume" = "Trading Volume";
/* "Add [a] Wallet [to the home screen]" */
"MenuButton.addWallet" = "Add Wallet";
/* Menu button title */
"MenuButton.lock" = "Lock Wallet";
/* "Menu button title */
"MenuButton.manageWallets" = "Manage Wallets";
/* "Menu button title */
"MenuButton.scan" = "Scan QR Code";
/* Menu button title */
"MenuButton.security" = "Security Settings";
/* Menu button title */
"MenuButton.settings" = "Settings";
/* Menu button title */
"MenuButton.support" = "Support";
/* button label */
"MenuViewController.createButton" = "Create New Wallet";
/* Menu modal title */
"MenuViewController.modalTitle" = "Menu";
/* button label */
"MenuViewController.recoverButton" = "Recover Wallet";
/* Paper Key Skip modal body (Android-version) */
"Modal.PaperKeySkip.Body.Android" = "Your recovery phrase is required to open your wallet if you change the security settings on your phone.\n\nAre you sure you want to set up your recovery phrase later?";
/* Paper Key Skip modal Continue Set Up button */
"Modal.PaperKeySkip.Button.ContinueSetUp" = "Continue Set Up";
/* Paper Key Skip modal I'll do it later button */
"Modal.PaperKeySkip.Button.IllDoItLater" = "I'll do it later";
/* Paper Key Skip modal title */
"Modal.PaperKeySkip.Title" = "Attention";
/* Node selection mode is automatic */
"NodeSelector.automatic" = "Automatic";
/* Switch to automatic mode button label */
"NodeSelector.automaticButton" = "Switch to Automatic Mode";
/* Node is connected label */
"NodeSelector.connected" = "Connected";
/* Node is connecting label */
"NodeSelector.connecting" = "Connecting";
/* Enter node ip address view body */
"NodeSelector.enterBody" = "Enter Node IP address and port (optional)";
/* Enter Node ip address view title */
"NodeSelector.enterTitle" = "Enter Node";
/* Entered invalid node address at the node selection screen */
"NodeSelector.invalid" = "Invalid Node";
/* Switch to manual mode button label */
"NodeSelector.manualButton" = "Switch to Manual Mode";
/* Node address label */
"NodeSelector.nodeLabel" = "Current Primary Node";
/* Node is not connected label */
"NodeSelector.notConnected" = "Not Connected";
/* Node status label */
"NodeSelector.statusLabel" = "Node Connection Status";
/* Node Selector view title */
"NodeSelector.title" = "Bitcoin Nodes";
/* Onboarding screen 'I'll browse first' button */
"Onboarding.browseFirst" = "I'll browse first";
/* Onboarding screen 'Buy some coin' button */
"Onboarding.buyCoin" = "Buy some coin";
/* Onboarding screen 'Get started' (create new wallet) button */
"Onboarding.getStarted" = "Get started";
/* Onboarding screen 'Next' button */
"Onboarding.next" = "Next";
/* Onboarding screen restore an existing wallet. */
"Onboarding.restoreWallet" = "Restore wallet";
/* Onboarding screen Skip button title that allows the user to exit the onboarding process. */
"Onboarding.skip" = "Skip";
/* Onboarding screen Page 4 title */
"OnboardingPageFour.title" = "Start investing today with as little as $50!";
/* Onboarding screen Page 1 title */
"OnboardingPageOne.title" = "Welcome to your new digital asset wallet!";
/* Onboarding screen Page 3 subtitle */
"OnboardingPageThree.subtitle" = "Invest and diversify with BRD, easily and securely.";
/* Onboarding screen Page 3 title */
"OnboardingPageThree.title" = "Buy and trade bitcoin, tokens, and other digital currencies.";
/* Onboarding screen Page 2 subtitle */
"OnboardingPageTwo.subtitle" = "We have over $6 billion USD worth of assets under protection.";
/* Onboarding screen Page 2 title */
"OnboardingPageTwo.title" = "Join millions of people around the world who trust BRD.";
/* Eg. Send 1.0Eth to purchase CCC */
"PaymentConfirmation.amountText" = "Send %1$@ to purchase %2$@";
/* Payment confirmation view title */
"PaymentConfirmation.title" = "Confirmation";
/* Bad Payment request alert title */
"PaymentProtocol.Errors.badPaymentRequest" = "Bad Payment Request";
/* Error opening payment protocol file message */
"PaymentProtocol.Errors.corruptedDocument" = "Unsupported or corrupted document";
/* Missing certificate payment protocol error message */
"PaymentProtocol.Errors.missingCertificate" = "missing certificate";
/* Request expired payment protocol error message */
"PaymentProtocol.Errors.requestExpired" = "request expired";
/* Payment too small alert title */
"PaymentProtocol.Errors.smallOutputError" = "Couldn't make payment";
/* Amount too small error message */
"PaymentProtocol.Errors.smallPayment" = "Payment can’t be less than %1$@. Bitcoin transaction fees are more than the amount of this transaction. Please increase the amount and try again. ";
/* Output too small error message. */
"PaymentProtocol.Errors.smallTransaction" = "Bitcoin transaction outputs can't be less than %1$@.";
/* Unsupported signature type payment protocol error message */
"PaymentProtocol.Errors.unsupportedSignatureType" = "unsupported signature type";
/* Untrusted certificate payment protocol error message */
"PaymentProtocol.Errors.untrustedCertificate" = "untrusted certificate";
"Platform.transaction_cancelled" = "Transaction Cancelled";
/* Body text for a prompt that asks the user to subscribe to email updates to find out product updates. */
"Prompts.Email.body" = "Be the first to receive important support and product updates";
/* Placeholder text for an email address text field. */
"Prompts.Email.placeholder" = "enter your email";
/* Body text that is shown when the user successfully subscribes to email updates. */
"Prompts.Email.successBody" = "You have successfully subscribed to receive updates";
/* Text that is displayed as a footnote when the user successfully subscribes to email updates. */
"Prompts.Email.successFootnote" = "We appreciate your continued support";
/* Title that is shown when the user successfully subscribes to email updates. */
"Prompts.Email.successTitle" = "Thank you!";
/* Title for a prompt that asks the user to subscribe to email updates to find out product updates. */
"Prompts.Email.title" = "Get in the loop";
/* Enable face ID prompt body */
"Prompts.FaceId.body" = "Tap Continue to enable Face ID";
/* Enable face ID prompt title */
"Prompts.FaceId.title" = "Enable Face ID";
/* No passcode set warning body */
"Prompts.NoPasscode.body" = "A device passcode is needed to safeguard your wallet. Go to settings and turn passcode on.";
/* No Passcode set warning title */
"Prompts.NoPasscode.title" = "Turn device passcode on";
/* Instructions on how to enable screen lock settings */
"Prompts.NoScreenLock.body.android" = "A device screen lock is needed to safeguard your wallet. Enable screen lock in your settings to continue.";
/* Device encryption prompt title */
"Prompts.NoScreenLock.title.android" = "Screen lock disabled";
/* Warning about paper key (Android-version) */
"Prompts.PaperKey.Body.Android" = "Set up your recovery phrase in case you ever lose or replace your phone. Your key is also required if you change your phone's security settings.";
/* Warning about recovery phrase (formerly paper key). */
"Prompts.PaperKey.body" = "Please write down your recovery phrase and store it somewhere that is safe and secure.";
/* An action is required (You must do this action). */
"Prompts.PaperKey.title" = "Action Required";
"Prompts.RateApp.dontShow" = "Don't ask again";
"Prompts.RateApp.enjoyingBrd" = "Enjoying BRD?";
"Prompts.RateApp.googlePlayReview" = "Your review helps grow the BRD community.";
"Prompts.RateApp.noThanks" = "No thanks";
"Prompts.RateApp.rateUs" = "Review us";
/* Transaction rejected prompt body */
"Prompts.RecommendRescan.body" = "Your wallet may be out of sync. This can often be fixed by rescanning the blockchain.";
/* Transaction rejected prompt title */
"Prompts.RecommendRescan.title" = "Transaction Rejected";
/* Share data prompt body */
"Prompts.ShareData.body" = "Help improve BRD by sharing your anonymous data with us";
/* Share data prompt title */
"Prompts.ShareData.title" = "Share Anonymous Data";
/* Enable touch ID prompt body */
"Prompts.TouchId.body" = "Tap Continue to enable Touch ID";
/* Enable Fingerprint prompt body */
"Prompts.TouchId.body.android" = "Tap here to enable fingerprint authentication";
/* Enable touch ID prompt title */
"Prompts.TouchId.title" = "Enable Touch ID";
/* Enable Fingerprint prompt title */
"Prompts.TouchId.title.android" = "Enable Fingerprint Authentication";
/* Button on fingerprint prompt so the user can enter their PIN instead */
"Prompts.TouchId.usePin.android" = "PIN";
/* Upgrade PIN prompt body. */
"Prompts.UpgradePin.body" = "BRD has upgraded to using a 6-digit PIN. Tap Continue to upgrade.";
/* Upgrade PIN prompt title. */
"Prompts.UpgradePin.title" = "Upgrade PIN";
/* Body text for push notifications opt-in prompt. */
"PushNotifications.body" = "Turn on push notifications and be the first to hear about new features and special offers.";
/* Push notifications are disabled alert title" */
"PushNotifications.disabled" = "Notifications Disabled";
/* Body text when push notifications are disabled. */
"PushNotifications.disabledBody" = "Turn on notifications to receive special offers and updates from BRD.";
/* Instructions to enable push notifications for BRD in the phone's system settings. */
"PushNotifications.enableInstructions" = "Looks like notifications are turned off. Please go to Settings to enable notifications from BRD.";
/* Body text when push notifications are enabled. */
"PushNotifications.enabledBody" = "You’re receiving special offers and updates from BRD.";
/* Push notifications toggle switch label */
"PushNotifications.label" = "Receive Push Notifications";
/* Push notifications are off label */
"PushNotifications.off" = "Off";
/* Push notifications are on label */
"PushNotifications.on" = "On";
/* Title for push notifications opt-in prompt. */
"PushNotifications.title" = "Stay in the Loop";
/* Push notifications settings failed to update settings on the back end */
"PushNotifications.updateFailed" = "Failed to update push notifications settings";
/* Google play review prompt body */
"RateAppPrompt.Body.Android" = "If you love our app, please take a moment to rate it and give us a review.";
/* Google play review prompt, revivew button */
"RateAppPrompt.Button.Dismiss.Android" = "No Thanks";
/* Google play review prompt, dismiss button */
"RateAppPrompt.Button.RateApp.Android" = "Rate BRD";
/* Google play review prompt title */
"RateAppPrompt.Title.Android" = "Rate BRD";
/* Alert action button label */
"ReScan.alertAction" = "Sync";
/* Alert message body */
"ReScan.alertMessage" = "You will not be able to send money while syncing.";
/* Alert message title */
"ReScan.alertTitle" = "Sync with Blockchain?";
/* extimated time */
"ReScan.body1" = "20-45 minutes";
/* Syncing explanation */
"ReScan.body2" = "If a transaction shows as completed on the network but not in your BRD.";
/* Syncing explanation */
"ReScan.body3" = "You repeatedly get an error saying your transaction was rejected.";
/* Start Sync button label */
"ReScan.buttonTitle" = "Start Sync";
/* Sync blockchain view footer */
"ReScan.footer" = "You will not be able to send money while syncing with the blockchain.";
/* Sync Blockchain view header */
"ReScan.header" = "Sync Blockchain";
/* Subheader label */
"ReScan.subheader1" = "Estimated time";
/* Subheader label */
"ReScan.subheader2" = "When to Sync?";
/* Address copied message. */
"Receive.copied" = "Copied to clipboard.";
/* Share via email button label */
"Receive.emailButton" = "Email";
/* Request button label */
"Receive.request" = "Request an Amount";
/* Share button label */
"Receive.share" = "Share";
/* Share via text message (SMS) */
"Receive.textButton" = "Text Message";
/* Receive modal title */
"Receive.title" = "Receive";
/* Done button text */
"RecoverWallet.done" = "Done";
/* Recover wallet header */
"RecoverWallet.header" = "Recover Wallet";
/* Reset PIN with paper key: header */
"RecoverWallet.header_reset_pin" = "Reset PIN";
/* Enter paper key instruction */
"RecoverWallet.instruction" = "Enter Recovery Phrase";
/* Recover wallet intro */
"RecoverWallet.intro" = "Recover your BRD with your recovery phrase.";
/* Invalid paper key message */
"RecoverWallet.invalid" = "The recovery phrase you entered is invalid. Please double-check each word and try again.";
/* Previous button accessibility label */
"RecoverWallet.leftArrow" = "Left Arrow";
/* Next button label */
"RecoverWallet.next" = "Next";
/* Reset PIN with paper key: more information button. */
"RecoverWallet.reset_pin_more_info" = "Tap here for more information.";
/* Next button accessibility label */
"RecoverWallet.rightArrow" = "Right Arrow";
/* Recover wallet sub-header */
"RecoverWallet.subheader" = "Enter the recovery phrase for the wallet you want to recover.";
/* Reset PIN with paper key: sub-header */
"RecoverWallet.subheader_reset_pin" = "To reset your PIN, enter the words from your recovery phrase into the boxes below.";
/* Instructs the user to enter words from the set of recovery phrase words. */
"RecoveryKeyFlow.confirmRecoveryInputError" = "The word you entered is incorrect. Please try again.";
/* Instructs the user to enter words from the set of recovery phrase words. */
"RecoveryKeyFlow.confirmRecoveryKeySubtitle" = "Almost done! Enter the following words from your recovery phrase.";
/* Title for the confirmation step of the recovery phrase flow. */
"RecoveryKeyFlow.confirmRecoveryKeyTitle" = "Confirm Recovery Phrase";
/* Title displayed when the user starts the process of entering a recovery phrase */
"RecoveryKeyFlow.enterRecoveryKey" = "Enter Recovery Phrase";
/* Subtitle displayed when the user starts the process of entering a recovery phrase */
"RecoveryKeyFlow.enterRecoveryKeySubtitle" = "Please enter your recovery phrase to unlink this wallet from your device.";
/* Body text for an alert dialog asking the user whether to set up the recovery phrase later */
"RecoveryKeyFlow.exitRecoveryKeyPromptBody" = "Are you sure you want to set up your recovery phrase later?";
/* Title for an alert dialog asking the user whether to set up the recovery phrase later */
"RecoveryKeyFlow.exitRecoveryKeyPromptTitle" = "Set Up Later";
/* Button text for the 'Generate Recovery Phrase' button */
"RecoveryKeyFlow.generateKeyButton" = "Generate Recovery Phrase";
/* Subtext for the recovery phrase landing page. */
"RecoveryKeyFlow.generateKeyExplanation" = "This key is required to recover your money if you upgrade or lose your phone.";
/* Default title for the recovery phrase landing page */
"RecoveryKeyFlow.generateKeyTitle" = "Generate your private recovery phrase";
/* Title for a button that takes the user to the wallet after setting up the recovery phrase. */
"RecoveryKeyFlow.goToWalletButtonTitle" = "Go to Wallet";
/* Hint text for recovery phrase intro page, e.g., Step 2 */
"RecoveryKeyFlow.howItWorksStep" = "How it works - Step %1$@";
/* Error text displayed when the user enters an incorrect recovery phrase */
"RecoveryKeyFlow.invalidPhrase" = "Some of the words you entered do not match your recovery phrase. Please try again.";
/* Title for recovery phrase intro page */
"RecoveryKeyFlow.keepSecure" = "Keep it secure";
/* Informs the user that the recovery is only required for recovering a wallet. */
"RecoveryKeyFlow.keyUseHint" = "Your key is only needed for recovery, not for everyday wallet access.";
/* Reminds the user not to take screenshots or email the recovery phrase words */
"RecoveryKeyFlow.noScreenshotsOrEmailWarning" = "For security purposes, do not screenshot or email these words";
/* Recommends that the user avoids capturing the paper key with a screenshot */
"RecoveryKeyFlow.noScreenshotsRecommendation" = "Write down your key on paper and confirm it. Screenshots are not recommended for security reasons.";
/* Title displayed when the user starts the process of recovering a wallet */
"RecoveryKeyFlow.recoveryYourWallet" = "Recover Your Wallet";
/* Subtitle displayed when the user starts the process of recovering a wallet */
"RecoveryKeyFlow.recoveryYourWalletSubtitle" = "Please enter the recovery phrase of the wallet you want to recover.";
/* Title for recovery phrase intro page */
"RecoveryKeyFlow.relaxBuyTrade" = "Relax, buy, and trade";
/* Reminds the user to write down the recovery phrase words. */
"RecoveryKeyFlow.rememberToWriteDownReminder" = "Remember to write these words down. Swipe back if you forgot.";
/* Instruction displayed when the user is resetting the PIN, which requires the recovery phrase to be entered */
"RecoveryKeyFlow.resetPINInstruction" = "Please enter your recovery phrase to reset your PIN.";
/* Assures the user that BRD will keep the user's funds secure. */
"RecoveryKeyFlow.securityAssurance" = "Buy and trade knowing that your funds are protected by the best security and privacy in the business.";
/* Recommends that the user stores the recovery phrase in a secure location */
"RecoveryKeyFlow.storeSecurelyRecommendation" = "Store your key in a secure location. This is the only way to recover your wallet. BRD does not keep a copy.";
/* Title for the success page after the recovery phrase has been set up */
"RecoveryKeyFlow.successHeading" = "Congratulations! You completed your recovery phrase setup.";
/* Subtitle for the success page after the recovery phrase has been set up */
"RecoveryKeyFlow.successSubheading" = "You're all set to deposit, trade, and buy crypto from your BRD wallet.";
/* Title displayed to the user on the intro screen when unlinking a wallet */
"RecoveryKeyFlow.unlinkWallet" = "Unlink your wallet from this device.";
/* Subtitle displayed to the user on the intro screen when unlinking a wallet. */
"RecoveryKeyFlow.unlinkWalletSubtext" = "Start a new wallet by unlinking your device from the currently installed wallet.";
/* Warning displayed when the user starts the process of unlinking a wallet */
"RecoveryKeyFlow.unlinkWalletWarning" = "Wallet must be recovered to regain access.";
/* Title displayed to the user on the intro screen when wiping a wallet */
"RecoveryKeyFlow.wipeWallet" = "Wipe your wallet from this device.";
/* Subtitle displayed to the user on the intro screen when wiping a wallet. */
"RecoveryKeyFlow.wipeWalletSubtext" = "Start a new wallet by wiping the current wallet from your device.";
/* Title for recovery phrase intro page */
"RecoveryKeyFlow.writeItDown" = "Write down your key";
/* Title for the recovery phrase landing page if the key has already been generated. */
"RecoveryKeyFlow.writeKeyAgain" = "Write down your recovery phrase again";
/* Subtitle for the write recovery phrase screen */
"RecoveryKeyFlow.writeKeyScreenSubtitle" = "Write down the following words in order.";
/* Title for the write recovery phrase screen */
"RecoveryKeyFlow.writeKeyScreenTitle" = "Your Recovery Phrase";
/* Title for the step number when the user pages through the recovery words */
"RecoveryKeyFlow.writeKeyStepTitle" = "%1$@ of %2$@";
/* No amount entered error message. */
"RequestAnAmount.noAmount" = "Please enter an amount first.";
/* Request a specific amount of bitcoin */
"RequestAnAmount.title" = "Request an Amount";
/* Rewards view expanded body. */
"RewardsView.expandedBody" = "Learn how you can save on trading fees and unlock future rewards";
/* Rewards view expanded title. */
"RewardsView.expandedTitle" = "Introducing BRD Rewards.";
/* Rewards view title */
"RewardsView.normalTitle" = "Rewards";
/* Scan bitcoin address camera flash toggle */
"Scanner.flashButtonLabel" = "Camera Flash";
/* Device without camera error */
"Scanner.noCamera" = "No camera found";
/* (alert dialog message) Would you like to send a [Bitcoin / Bitcoin Cash / Ethereum] payment to this address?") */
"Scanner.paymentPromptMessage" = "Would you like to send a %1$@ payment to this address?";
/* alert dialog title */
"Scanner.paymentPromptTitle" = "Send Payment";
/* Complete filter label */
"Search.complete" = "complete";
/* Pending filter label */
"Search.pending" = "pending";
/* Received filter label */
"Search.received" = "received";
/* [Click here to] search */
"Search.search" = "Search";
/* Sent filter label */
"Search.sent" = "sent";
/* Face ID button title */
"SecurityCenter.faceIdTitle" = "Face ID";
/* Paper Key button description */
"SecurityCenter.paperKeyDescription" = "The only way to access your assets if you lose or upgrade your phone.";
/* Recovery Phrase button title. This used to be called 'paper key', so leaving the string key as `paperKeyTitle` in order
 * to not break existing client code. */
"SecurityCenter.paperKeyTitle" = "Recovery Phrase";
/* Paper Key button title */
"SecurityCenter.paperKeyTitle.android" = "Recovery Phrase";
/* PIN button description */
"SecurityCenter.pinDescription" = "Protects your BRD from unauthorized users.";
/* PIN button title */
"SecurityCenter.pinTitle" = "6-Digit PIN";
/* Touch ID button description */
"SecurityCenter.touchIdDescription" = "Conveniently unlock your BRD and send money up to a set limit.";
/* Touch ID button title */
"SecurityCenter.touchIdTitle" = "Touch ID";
/* Security center fingerprint authentication button */
"SecurityCenter.touchIdTitle.android" = "Fingerprint Authentication";
/* Segwit extra confirmation title. */
"Segwit.ConfirmChoiceLayout" = "Enabling SegWit is an irreversible feature. Are you sure you want to continue?";
/* Segwit enabled confirmation title */
"Segwit.ConfirmationConfirmationTitle" = "You have enabled SegWit!";
/* Segwit enabled confirmation description */
"Segwit.ConfirmationInstructionsDescription" = "Thank you for helping move bitcoin forward.";
/* Segwit instructions */
"Segwit.ConfirmationInstructionsInstructions" = "SegWit support is still a beta feature.\n\nOnce SegWit is enabled, it will not be possible\nto disable it. You will be able to find the legacy address under Settings. \n\nSome third-party services, including crypto trading, may be unavailable to users who have enabled SegWit. In case of emergency, you will be able to generate a legacy address from Preferences > Bitcoin Settings. \n\nSegWit will automatically be enabled for all\nusers in a future update. ";
/* Segwit enableButton */
"Segwit.Enable" = "Enable";
/* Segwit button label that takes the user back to the home screen once SegWit is enabled. */
"Segwit.HomeButton" = "To the Moon";
/* Adress already used alert message - first part */
"Send.UsedAddress.firstLine" = "Bitcoin addresses are intended for single use only.";
/* Adress already used alert message - second part */
"Send.UsedAddress.secondLIne" = "Re-use reduces privacy for both you and the recipient and can result in loss if the recipient doesn't directly control the address.";
/* Adress already used alert title */
"Send.UsedAddress.title" = "Address Already Used";
/* Send money amount label */
"Send.amountLabel" = "Amount";
/* Balance: $4.00 */
"Send.balance" = "Balance: %1$@";
/* Balance: $4.00 for iOS, the balance can't have a parameter */
"Send.balanceString" = "Balance: ";
/* Instructions how to allow the camera access for the app */
"Send.cameraUnavailabeMessage.android" = "Allow camera access in \"Settings\" > \"Apps\" > \"BRD\" > \"Permissions\"";
/* Permission required to access camera */
"Send.cameraUnavailabeTitle.android" = "BRD is not allowed to access the camera";
/* Camera not allowed alert title */
"Send.cameraUnavailableTitle" = "BRD is not allowed to access the camera";
/* Camera not allowed message */
"Send.cameraunavailableMessage" = "Go to Settings to allow camera access.";
/* Warning when sending to self. */
"Send.containsAddress" = "The destination is your own address. You cannot send to yourself.";
/* Could not create transaction alert title */
"Send.creatTransactionError" = "Could not create transaction.";
/* Description for sending money label */
"Send.descriptionLabel" = "Memo";
/* Optional Destination Tag label */
"Send.destinationTag_optional" = "Destination Tag (Optional)";
/* Required Destination Tag label */
"Send.destinationTag_required" = "Destination Tag (Required)";
"Send.destinationTag_required_error" = "A valid Destination Tag is required for the target address.";
/* Emtpy pasteboard error message */
"Send.emptyPasteboard" = "Pasteboard is empty";
/* "(you) can't send (to your)self" */
"Send.ethSendSelf" = "Can't send to self.";
/* Network Fee: $0.01 */
"Send.fee" = "Network Fee: %1$@";
"Send.fio_invalid" = "Invalid FIO address.";
"Send.fio_noAddress" = "There is no %1$@ address associated with this FIO address.";
"Send.fio_retrievalError" = "There was an error retrieving the address for this FIO address. Please try again later.";
/* Payee identity not certified alert title. */
"Send.identityNotCertified" = "Payee identity isn't certified.";
/* Insufficient funds error */
"Send.insufficientFunds" = "Insufficient Funds";
/* e,g, "You must have at least $2 in your wallet in order to transfer this type of token." In this case, "token" is an ethereum ERC20 token. */
"Send.insufficientGasMessage" = "You must have at least %1$@ in your wallet in order to transfer this type of token. Would you like to go to your Ethereum wallet now?";
/* Your ethereum balance is insufficient to complete this action. */
"Send.insufficientGasTitle" = "Insufficient Ethereum Balance";
/* e.g. The destination is not a valid (bitcoin) address. */
"Send.invalidAddressMessage" = "The destination address is not a valid %1$@ address.";
/* Invalid address on pasteboard message */
"Send.invalidAddressOnPasteboard" = "Pasteboard does not contain a valid %1$@ address.";
/* Invalid address alert title */
"Send.invalidAddressTitle" = "Invalid Address";
/* Is rescanning error message */
"Send.isRescanning" = "Sending is disabled during a full rescan.";
/* Warning when the user is trying to send bitcoin cash to a legacy bitcoin address (possible, but probably not what the user wants to do) */
"Send.legacyAddressWarning" = "Warning: this is a legacy bitcoin address. Are you sure you want to send Bitcoin Cash to it?";
/* We are loading the request (now) */
"Send.loadingRequest" = "Loading Request";
/* Placeholder text for Hedera Memo field on send screen */
"Send.memoTag_optional" = "Hedera Memo (Optional)";
/* Transaction fee could not be be caluculated error. */
"Send.nilFeeError" = "Insufficient funds to cover the transaction fee.";
/* Empty address alert message */
"Send.noAddress" = "Please enter the recipient's address.";
/* Emtpy amount alert message */
"Send.noAmount" = "Please enter an amount to send.";
/* No Fees error */
"Send.noFeesError" = "Network Fee conditions are being downloaded. Please try again.";
/* Paste button label */
"Send.pasteLabel" = "Paste";
/* Error message for invalid PayID */
"Send.payId_invalid" = "Invalid PayString.";
/* Error message for no address associated with a PayID for a given currency */
"Send.payId_noAddress" = "There is no %1$@ address associated with this PayString.";
/* Error message for error in retrieving the address from the PayID endpoint */
"Send.payId_retrievalError" = "There was an error retrieving the address for this PayString. Please try again later.";
/* PayID label */
"Send.payId_toLabel" = "PayString";
/* Could not publish transaction alert title */
"Send.publishTransactionError" = "Could not publish transaction.";
/* Could not load remote request error message */
"Send.remoteRequestError" = "Could not load payment request";
/* Scan button label */
"Send.scanLabel" = "Scan";
/* Send button label (the action, "press here to send") */
"Send.sendLabel" = "Send";
/* Send button label (for special case where the user specified send amount is too high and does not leave a balance to cover fees.) */
"Send.sendMaximum" = "Send maximum amount?";
/* Sending Max: $4.00 for iOS, the balance can't have a parameter */
"Send.sendingMax" = "Sending Max: ";
/* Send screen title (as in "this is the screen for sending money") */
"Send.title" = "Send";
/* Send money to label */
"Send.toLabel" = "To";
"Send.udomains_invalid" = "Invalid address.";
"Send.udomains_noAddress" = "There is no %1$@ address associated with this address.";
"Send.udomains_retrievalError" = "There was an error retrieving this address. Please try again later.";
"Send_fio_toLabel" = "FIO";
/* Enable segwit. */
"Settings.EnableSegwit" = "Enable Segwit";
/* View legacy address (old format). */
"Settings.ViewLegacyAddress" = "View Legacy Receive Address";
/* Receive Bitcoin instructions */
"Settings.ViewLegacyAddressReceiveDescription" = "Only send Bitcoin (BTC) to this address. Any other asset sent to this address will be lost permanently.";
/* Receive Bitcoin */
"Settings.ViewLegacyAddressReceiveTitle" = "Receive Bitcoin";
/* About label */
"Settings.about" = "About";
/* Advanced settings header */
"Settings.advanced" = "Advanced";
/* Advanced Settings title */
"Settings.advancedTitle" = "Advanced Settings";
/* ATM map menu item title explaining that it's a feature only available in the USA */
"Settings.atmMapMenuItemSubtitle" = "Available in the USA only";
/* ATM map menu item title */
"Settings.atmMapMenuItemTitle" = "Crypto ATM Map";
/* i.e. the currency which will be displayed */
"Settings.currency" = "Display Currency";
/* e.g. "USD Settings" (settings for how USD is handled) */
"Settings.currencyPageTitle" = "%1$@ Settings";
/* Section title for a collection of different settings screens, one for each currency */
"Settings.currencySettings" = "Currency Settings";
/* Join Early access label */
"Settings.earlyAccess" = "Join Early Access";
/* Are you enjoying bread alert message body */
"Settings.enjoying" = "Are you enjoying BRD?";
/* Export transaction history menu item */
"Settings.exportTransfers" = "Export transaction history to CSV";
/* Face ID spending limit label */
"Settings.faceIdLimit" = "Face ID Spending Limit";
/* Redeem the funds stored on this private key. */
"Settings.importTitle" = "Redeem Private Key";
/* Manage settings section header */
"Settings.manage" = "Manage";
/* Notifications label */
"Settings.notifications" = "Notifications";
"Settings.orderHistory" = "Order History";
/* Section header for "other settings". */
"Settings.other" = "Other";
/* Preferences settings section header */
"Settings.preferences" = "Preferences";
/* Tap here to reset the list of currencies to the default settings. */
"Settings.resetCurrencies" = "Reset to Default Currencies";
/* Leave review button label */
"Settings.review" = "Leave us a Review";
/* Rewards menu item */
"Settings.rewards" = "Rewards";
/* Share logs sheet label */
"Settings.share" = "Share";
/* Share anonymous data label */
"Settings.shareData" = "Share Anonymous Data";
/* "Enables sharing balance to widget" */
"Settings.shareWithWidget" = "Share portfolio data with widgets";
/* Sync blockchain label */
"Settings.sync" = "Sync Blockchain";
/* Settings title */
"Settings.title" = "Menu";
/* Touch ID spending limit label */
"Settings.touchIdLimit" = "Touch ID Spending Limit";
/* The fingerprint spending limit */
"Settings.touchIdLimit.android" = "Fingerprint Authentication Spending Limit";
/* Wallet Settings section header */
"Settings.wallet" = "Wallets";
/* Unlink/delete your wallet from the current device. */
"Settings.wipe" = "Unlink from this device";
/* Wipe/delete your wallet from the current device. */
"Settings.wipe.android" = "Wipe wallet from this device";
/* Share data view body */
"ShareData.body" = "Help improve BRD by sharing your anonymous data with us. This does not include any financial information. We respect your financial privacy.";
/* Share data header */
"ShareData.header" = "Share Data?";
/* Share data switch label. */
"ShareData.toggleLabel" = "Share Anonymous Data?";
"ShareGift.approximateTotal" = "Approximate Total";
"ShareGift.footerMessage1" = "A network fee will be deducted from the total when claimed.\nActual value depends on current price of bitcoin.";
"ShareGift.footerMessage2" = "Download the BRD app for iPhone or Android.\nFor more information visit brd.com/gift";
"ShareGift.tagLine" = "Someone gifted you bitcoin!";
"ShareGift.walletName" = "Bitcoin";
/* Button label: select a baker */
"Staking.add" = "+ Select Baker";
/* Baker cell: Free Space field header */
"Staking.cellFreeSpaceHeader" = "Free Space";
"Staking.changeValidator" = "Change";
/* Body copy for staking modal */
"Staking.descriptionTezos" = "Delegate your Tezos account to a validator to earn a reward while keeping full security and control of your coins.";
/* Baker cell: Fee field header */
"Staking.feeHeader" = "Fee:";
/* Error loading bakers message */
"Staking.loadingBakerError" = "An error occurred while loading baker information. Please try again later.";
/* Status label: current staking transaction is pending */
"Staking.pendingTransaction" = "Transaction pending...";
/* Button label: remove selected baker */
"Staking.remove" = "Remove";
/* Baker cell: ROI field header */
"Staking.roiHeader" = "Est. ROI";
/* Modal title: Select Baker modal */
"Staking.selectBakerTitle" = "Select XTZ Delegate";
/* Button label: Stake the selected baker */
"Staking.stake" = "Stake";
/* UI flag showing state of Tezos staking */
"Staking.stakingActiveFlag" = "ACTIVE";
/* UI flag showing state of Tezos staking */
"Staking.stakingInactiveFlag" = "INACTIVE";
/* UI flag showing state of Tezos staking */
"Staking.stakingPendingFlag" = "PENDING";
/* Modal title: Staking modal */
"Staking.stakingTitle" = "Staking";
"Staking.stakingTo" = "staking to %1$s";
"Staking.statusPending" = "Pending";
"Staking.statusStaked" = "Staked!";
/* Headline for staking modal */
"Staking.subTitle" = "Earn money while holding";
/* Tezos XTZ baker asset type */
"Staking.tezosDune" = "Tezos & Dune";
/* Tezos XTZ baker asset type */
"Staking.tezosMultiasset" = "Multiasset Pool";
/* Tezos XTZ baker asset type */
"Staking.tezosOnly" = "Tezos-only";
"Staking.title" = "Stake %1$s";
/* Button label: Unstake the selected baker */
"Staking.unstake" = "Unstake";
"Staking.validatorHint" = "Enter Validator Address";
/* Paper key explanation text (Android-version) */
"StartPaperPhrase.Body.Android" = "Your recovery phrase is the only way to restore your BRD if your phone is lost, stolen, broken, or upgraded.\n\nYour recovery phrase is also required if you change the security settings on your device.\n\nWe will show you a list of words to write down on a piece of paper and keep safe.";
/* button label */
"StartPaperPhrase.againButtonTitle" = "Write Down Recovery Phrase Again";
/* Paper key explanation text. */
"StartPaperPhrase.body" = "Your recovery phrase is the only way to restore your BRD if your phone is lost, stolen, broken, or upgraded.\n\nWe will show you a list of words to write down on a piece of paper and keep safe.";
/* button label */
"StartPaperPhrase.buttonTitle" = "Write Down Recovery Phrase";
/* Argument is date; date should be on a new line */
"StartPaperPhrase.date" = "Last written down on\n %1$@";
/* button label */
"StartViewController.createButton" = "Create New Wallet";
/* Start view message */
"StartViewController.message" = "Moving money forward.";
/* Recover your wallet from a backup */
"StartViewController.recoverButton" = "Recover Wallet";
"SupportForm.feedbackAppreciated" = "We would love your feedback";
"SupportForm.helpUsImprove" = "Help us improve";
"SupportForm.notNow" = "Not now";
"SupportForm.pleaseDescribe" = "Please describe your experience";
/* Syncing view done syncing state header text */
"SyncingView.activity" = "Activity";
/* Syncing view connectiong state header text */
"SyncingView.connecting" = "Connecting";
/* "Sync failed label */
"SyncingView.failed" = "Sync Failed";
/* Syncing view header text */
"SyncingView.header" = "Syncing";
/* Retry button label */
"SyncingView.retry" = "Retry";
/* "eg. Synced through <Jan 12, 2015> */
"SyncingView.syncedThrough" = "Synced through %1$@";
/* Syncing view syncing state header text */
"SyncingView.syncing" = "Syncing";
/* 6 d (6 days) */
"TimeSince.days" = "%1$@ d";
/* 6 h (6 hours) */
"TimeSince.hours" = "%1$@ h";
/* 6 m (6 minutes) */
"TimeSince.minutes" = "%1$@ m";
/* 6 s (6 seconds) */
"TimeSince.seconds" = "%1$@ s";
/* Add [this item to the list] */
"TokenList.add" = "Add";
/* Add Wallets  [to your home screen] */
"TokenList.addTitle" = "Add Wallets";
/* Hide [this token from view] */
"TokenList.hide" = "Hide";
/* [click here to] Manage [your] Wallets */
"TokenList.manageTitle" = "Manage Wallets";
/* Remove [this item from the list] */
"TokenList.remove" = "Remove";
/* Show [this item on your home screen] */
"TokenList.show" = "Show";
/* You can customize your Touch ID Spending Limit from the [TouchIdSettings.linkText gets added here as a button] */
"TouchIdSettings.customizeText" = "You can customize your Touch ID spending limit from the %1$@.";
/* Fingerprint enabling description body */
"TouchIdSettings.customizeText.android" = "You can customize your Fingerprint Authentication Spending Limit from the Fingerprint Authorization Spending Limit screen";
/* Instruction for the fingerprint setup */
"TouchIdSettings.disabledWarning.body.android" = "You have not enabled fingerprint authentication on this device. Go to Settings -> Security to set up fingerprint authentication.";
/* Fingerprint Is Not Setup */
"TouchIdSettings.disabledWarning.title.android" = "Fingerprint Authentication Not Enabled";
/* Text that describes the purpose of the Touch ID settings in the BRD app. */
"TouchIdSettings.explanatoryText" = "Use Touch ID to unlock your BRD app and send money.";
/* Touch Id screen label */
"TouchIdSettings.label" = "Use your fingerprint to unlock your BRD and send money up to a set limit.";
/* Link Text (see TouchIdSettings.customizeText) */
"TouchIdSettings.linkText" = "Touch ID Spending Limit Screen";
/* Spending Limit: b100,000 ($100) */
"TouchIdSettings.spendingLimit" = "Spending limit: %1$@ (%2$@)";
/* Touch id switch label. */
"TouchIdSettings.switchLabel" = "Enable Touch ID for BRD";
/* Enable fingerprint for this wallet called Bread */
"TouchIdSettings.switchLabel.android" = "Enable Fingerprint Authentication";
/* Touch ID settings view title */
"TouchIdSettings.title" = "Touch ID";
/* Fingerprint authentication label */
"TouchIdSettings.title.android" = "Fingerprint Authentication";
/* Text label for a toggle that enables Touch ID for sending money. */
"TouchIdSettings.transactionsTitleText" = "Enable Touch ID to send money";
/* Touch ID unavailable alert message */
"TouchIdSettings.unavailableAlertMessage" = "You have not set up Touch ID on this device. Go to Settings->Touch ID & Passcode to set it up now.";
/* Touch ID unavailable alert title */
"TouchIdSettings.unavailableAlertTitle" = "Touch ID Not Set Up";
/* Text label for the toggle that enables Touch ID for unlocking the BRD app. */
"TouchIdSettings.unlockTitleText" = "Enable Touch ID to unlock BRD";
/* Always require passcode option */
"TouchIdSpendingLimit" = "Always require passcode";
/* Touch ID spending limit screen body */
"TouchIdSpendingLimit.body" = "You will be asked to enter your 6-digit PIN to send any transaction over your spending limit, and every 48 hours since the last time you entered your 6-digit PIN.";
/* Touch Id spending limit screen title */
"TouchIdSpendingLimit.title" = "Touch ID Spending Limit";
/* name of spending limit when using fingerprint authorization */
"TouchIdSpendingLimit.title.android" = "Fingerprint Authorization Spending Limit";
/* Availability status text */
"Transaction.available" = "Available to Spend";
/* Transaction complete label */
"Transaction.complete" = "Complete";
/* Transaction is confirming status text */
"Transaction.confirming" = "In Progress";
/* eg. Ending balance: $50.00 */
"Transaction.ending" = "Ending balance: %1$@";
/* Exchange rate on date header */
"Transaction.exchangeOnDayReceived" = "Exchange rate when received:";
/* Exchange rate on date header */
"Transaction.exchangeOnDaySent" = "Exchange rate when sent:";
/* Transaction failed status text */
"Transaction.failed" = "Failed";
/* (b600 fee) */
"Transaction.fee" = "(%1$@ fee)";
/* Invalid transaction */
"Transaction.invalid" = "INVALID";
/* Timestamp label for event that just happened */
"Transaction.justNow" = "just now";
/* Transaction is pending status text */
"Transaction.pending" = "Pending";
/* Receive status text: 'In progress: 20%' */
"Transaction.receivedStatus" = "In progress: %1$@";
/* Send status text: 'In progress: 20%' */
"Transaction.sendingStatus" = "In progress: %1$@";
/* sending to <address> */
"Transaction.sendingTo" = "sending to %1$@";
/* sent to <address> */
"Transaction.sentTo" = "sent to %1$@";
"Transaction.stakingTo" = "staking to %1$@";
/* eg. Starting balance: $50.00 */
"Transaction.starting" = "Starting balance: %1$@";
"Transaction.toRecipient" = "to %1$s";
/* e.g. "[The money you paid was a] Fee for token transfer: BRD" (BRD is the token that was transfered) */
"Transaction.tokenTransfer" = "Fee for token transfer: %1$@";
/* Waiting to be confirmed string */
"Transaction.waiting" = "Waiting to be confirmed. Some merchants require confirmation to complete a transaction. Estimated time: 1-2 hours.";
/* e.g. I received money from an account. */
"TransactionDetails.account" = "account";
/* Address received from header */
"TransactionDetails.addressFromHeader" = "From";
/* Address sent to header */
"TransactionDetails.addressToHeader" = "To";
/* e.g. "(this was received) via (address #1)" via = by way of */
"TransactionDetails.addressViaHeader" = "Via";
/* Amount section header */
"TransactionDetails.amountHeader" = "Amount";
/* "(it was worth) $100 when received, (and it is worth) $200 now" */
"TransactionDetails.amountWhenReceived" = "%1$@ when received, %2$@ now";
/* "(it was worth) $100 when sent, (and it is worth) $200 now" */
"TransactionDetails.amountWhenSent" = "%1$@ when sent, %2$@ now";
/* Block height label */
"TransactionDetails.blockHeightLabel" = "Confirmed in Block";
/* Memo section header */
"TransactionDetails.commentsHeader" = "Memo";
/* Memo field placeholder */
"TransactionDetails.commentsPlaceholder" = "Add memo...";
/* Timestamp section header for complete tx */
"TransactionDetails.completeTimestampHeader" = "Complete";
/* Confirmations label
eg. 182930 (45061 confirmations) */
"TransactionDetails.confirmationsLabel" = "Confirmations";
"TransactionDetails.destinationTag" = "Destination Tag";
"TransactionDetails.destinationTag_EmptyHint" = "(empty)";
/* Empty transaction list message. */
"TransactionDetails.emptyMessage" = "Your transactions will appear here.";
/* e.g. the users balance after the transaction was compeleted */
"TransactionDetails.endingBalanceHeader" = "Ending Balance";
/* Exchange rate section header */
"TransactionDetails.exchangeRateHeader" = "Exchange Rate";
/* Tx detail field header */
"TransactionDetails.feeHeader" = "Total Fee";
/* "Received [$5] at [which of my addresses]" => This is the "at [which of my addresses]" part. */
"TransactionDetails.from" = "at %1$@";
/* Tx detail field header */
"TransactionDetails.gasLimitHeader" = "Gas Limit";
/* Tx detail field header */
"TransactionDetails.gasPriceHeader" = "Gas Price";
"TransactionDetails.gift" = "Gift";
"TransactionDetails.giftedTo" = "Gifted to %1$s";
/* Label for Hedera Memo field on transaction details screen */
"TransactionDetails.hederaMemo" = "Hedera Memo";
/* Hide Details button */
"TransactionDetails.hideDetails" = "Hide Details";
/* Label showing the transaction was started (initialized) */
"TransactionDetails.initializedTimestampHeader" = "Initialized";
/* More button title */
"TransactionDetails.more" = "More...";
/* Moved $5.00 (as in "I moved $5 to another location") */
"TransactionDetails.moved" = "Moved %1$@";
/* Moved $5.00 */
"TransactionDetails.movedAmountDescription" = "Moved <b>%1$@</b>";
/* eg. Confirmed in Block: Not Confirmed */
"TransactionDetails.notConfirmedBlockHeightLabel" = "Not Confirmed";
/* "Received [$5] at [which of my addresses]" => This is the "Received [$5]" part. */
"TransactionDetails.received" = "Received %1$@";
/* Received $5.00 */
"TransactionDetails.receivedAmountDescription" = "Received <b>%1$@</b>";
/* received from <address> */
"TransactionDetails.receivedFrom" = "received from %1$@";
/* received via <address> */
"TransactionDetails.receivedVia" = "received via %1$@";
/* receiving from <address> */
"TransactionDetails.receivingFrom" = "receiving from %1$@";
/* receiving via <address> */
"TransactionDetails.receivingVia" = "receiving via %1$@";
"TransactionDetails.reclaim" = "Reclaim";
"TransactionDetails.resend" = "Resend";
/* "Sent [$5] to [address]" => This is the "Sent [$5]" part. */
"TransactionDetails.sent" = "Sent %1$@";
/* Sent $5.00 */
"TransactionDetails.sentAmountDescription" = "Sent <b>%1$@</b>";
/* Show Details button */
"TransactionDetails.showDetails" = "Show Details";
/* The balance the user started with before the transaction completed */
"TransactionDetails.startingBalanceHeader" = "Starting Balance";
/* Status section header */
"TransactionDetails.statusHeader" = "Status";
/* Transaction Details Title */
"TransactionDetails.title" = "Transaction Details";
/* Transaction Details Title - Failed */
"TransactionDetails.titleFailed" = "Failed";
/* Transaction Details Title - Internal */
"TransactionDetails.titleInternal" = "Internal";
/* Transaction Details Title - Received */
"TransactionDetails.titleReceived" = "Received";
/* Transaction Details Title - Receiving */
"TransactionDetails.titleReceiving" = "Receiving";
/* Transaction Details Title - Sending */
"TransactionDetails.titleSending" = "Sending";
/* Transaction Details Title - Sent */
"TransactionDetails.titleSent" = "Sent";
/* "Sent [$5] to [address]" => This is the "to [address]" part. */
"TransactionDetails.to" = "to %1$@";
/* Tx detail field header */
"TransactionDetails.totalHeader" = "Total";
/* Transaction ID header */
"TransactionDetails.txHashHeader" = "Transaction ID";
/* (this transaction was) Received at this address: */
"TransactionDirection.address" = "Received at this Address";
/* (this transaction was) Sent to this address: */
"TransactionDirection.to" = "Sent to this Address";
/* Authorize to copy wallet address PIN view prompt. */
"URLHandling.addressList" = "Authorize to copy wallet address to clipboard";
/* Authorize to copy wallet address alert title */
"URLHandling.addressListAlertTitle" = "Copy Wallet Addresses";
/* Authorize to copy wallet addresses alert message */
"URLHandling.addressaddressListAlertMessage" = "Copy wallet addresses to clipboard?";
/* Copy wallet addresses alert button label */
"URLHandling.copy" = "Copy";
/* Disabled until date */
"UnlockScreen.disabled" = "Disabled until: %1$@";
/* Unlock with FaceID accessibility label */
"UnlockScreen.faceIdText" = "Unlock with FaceID";
/* My Address button title */
"UnlockScreen.myAddress" = "My Address";
/* Reset PIN with Paper Key button label. */
"UnlockScreen.resetPin" = "Reset PIN";
/* Scan button title */
"UnlockScreen.scan" = "Scan";
/* Instruction to touch the sensor for fingerprint authentication */
"UnlockScreen.touchIdInstructions.android" = "Touch Sensor";
/* TouchID prompt text */
"UnlockScreen.touchIdPrompt" = "Unlock your BRD.";
/* Device authentication body */
"UnlockScreen.touchIdPrompt.android" = "Please unlock your Android device to continue.";
/* Unlock with TouchID accessibility label */
"UnlockScreen.touchIdText" = "Unlock with TouchID";
/* Device authentication title */
"UnlockScreen.touchIdTitle.android" = "Authentication required";
/* Update PIN caption text */
"UpdatePin.caption" = "Remember this PIN. If you forget it, you won't be able to access your assets.";
/* PIN creation info. */
"UpdatePin.createInstruction" = "Your PIN will be used to unlock your BRD and send money.";
/* Update PIN title */
"UpdatePin.createTitle" = "Set PIN";
/* Update PIN title */
"UpdatePin.createTitleConfirm" = "Re-Enter PIN";
/* Enter current PIN instruction */
"UpdatePin.enterCurrent" = "Enter your current PIN.";
/* Enter new PIN instruction */
"UpdatePin.enterNew" = "Enter your new PIN.";
/* Re-Enter new PIN instruction */
"UpdatePin.reEnterNew" = "Re-Enter your new PIN.";
/* Update PIN failure error message. */
"UpdatePin.setPinError" = "Sorry, could not update PIN.";
/* Update PIN failure alert view title */
"UpdatePin.setPinErrorTitle" = "Update PIN Error";
/* Update PIN title */
"UpdatePin.updateTitle" = "Update PIN";
/* Verify PIN for transaction view body */
"VerifyPin.authorize" = "Please enter your PIN to authorize this transaction.";
/* Verify PIN view body */
"VerifyPin.continueBody" = "Please enter your PIN to continue.";
/* Verify PIN view title */
"VerifyPin.title" = "PIN Required";
/* Authorize transaction with touch id message */
"VerifyPin.touchIdMessage" = "Authorize this transaction";
"Wallet.one_day" = "1d";
"Wallet.one_month" = "1m";
"Wallet.one_week" = "1w";
"Wallet.one_year" = "1y";
"Wallet.stakingTitle" = "Staking";
"Wallet.three_months" = "3m";
"Wallet.three_years" = "3y";
/* Turn off fast sync confirmation question */
"WalletConnectionSettings.confirmation" = "Are you sure you want to turn off Fastsync?";
/* Explanation for wallet connection setting */
"WalletConnectionSettings.explanatoryText" = "Make syncing your bitcoin wallet practically instant. Learn more about how it works here.";
/* Connection mode switch label. */
"WalletConnectionSettings.footerTitle" = "Powered by";
/* Wallet connection settings view title */
"WalletConnectionSettings.header" = "Fastsync (pilot)";
/* Link text in explanatoryText This NB: This should exactly match the last word of WalletConnectionSettings.explanatoryText */
"WalletConnectionSettings.link" = "here";
/* WalletConnectionSettiongs
Wallet connection settings menu item title. */
"WalletConnectionSettings.menuTitle" = "Connection Mode";
/* Turn off fast sync button label */
"WalletConnectionSettings.turnOff" = "Turn Off";
/* Wallet connection settings view title */
"WalletConnectionSettings.viewTitle" = "Fastsync";
/* 'No wallet' warning for watch app */
"Watch.noWalletWarning" = "Open the BRD iPhone app to set up your wallet.";
/* Dismiss button label */
"Webview.dismiss" = "Dismiss";
/* Webview loading error message */
"Webview.errorMessage" = "There was an error loading the content. Please try again.";
/* Updating webview message */
"Webview.updating" = "Updating...";
/* Welcome screen text. (?) will be replaced with the help icon users should look for. */
"Welcome.body" = "Breadwallet has changed its name to BRD, with a brand new look and some new features.\n\nIf you need help, look for the (?) in the top right of most screens.";
/* Top title of welcome screen */
"Welcome.title" = "Welcome to BRD!";
/* Name of color based on os theme light/dark */
"Widget.Color.autoLightDark" = "System Auto Light / Dark";
/* Name of color - Black */
"Widget.Color.black" = "Black";
/* Name of color - Blue */
"Widget.Color.blue" = "Blue";
/* Name of color - Gray */
"Widget.Color.gray" = "Gray";
/* Name of color - Green */
"Widget.Color.green" = "Green";
/* Name of color - Orange */
"Widget.Color.orange" = "Orange";
/* Name of color - Pink */
"Widget.Color.pink" = "Pink";
/* Name of color - Primary Background */
"Widget.Color.primaryBackground" = "Primary";
/* Name of color - Primary Text */
"Widget.Color.primaryText" = "Primary";
/* Name of color - Purple */
"Widget.Color.purple" = "Purple";
/* Name of color - Red */
"Widget.Color.red" = "Red";
/* Name of color - Secondary Background */
"Widget.Color.secondaryBackground" = "Secondary";
/* Name of color - Secondary Text */
"Widget.Color.secondaryText" = "Secondary";
/* Name of color - Tertiary Background */
"Widget.Color.tertiaryBackground" = "Tertiary";
/* Name of color - Tertiary Text */
"Widget.Color.tertiaryText" = "Tertiary";
/* Name of color - White */
"Widget.Color.white" = "White";
/* Name of color - Yellow */
"Widget.Color.yellow" = "Yellow";
/* Single asset widget description */
"Widget.assetDescription" = "Stay up to date with your favorite crypto asset";
/* Asset list widget description */
"Widget.assetListDescription" = "Stay up to date with your favorite crypto assets";
/* Asset list widget title */
"Widget.assetListTitle" = "Asset list";
/* Single asset widget title */
"Widget.assetTitle" = "Asset";
/* Title of color grouping in widget color picker */
"Widget.colorSectionBackground" = "Theme Background Colors";
/* Title of color grouping in widget color picker */
"Widget.colorSectionBasic" = "Basic Colors";
/* Title of color grouping in widget color picker */
"Widget.colorSectionCurrency" = "Currency Colors";
/* Title of color grouping in widget color picker */
"Widget.colorSectionSystem" = "System Colors";
/* Title of color grouping in widget color picker */
"Widget.colorSectionText" = "Theme Text Colors";
/* Portfolio widget description if data sharing is disabled */
"Widget.enablePortfolio" = "Enable in app\npreferences";
/* Portfolio description */
"Widget.portfolioDescription" = "Stay up to date with your portfolio";
/* Portfolio widget description if data sharing is enabled */
"Widget.portfolioSummary" = "Portfolio\nSummary";
/* Portfolio widget title */
"Widget.portfolioTitle" = "Portfolio";
/* Wipe wallet alert message */
"WipeWallet.alertMessage" = "Are you sure you want to delete this wallet?";
/* Wipe wallet alert title */
"WipeWallet.alertTitle" = "Wipe Wallet?";
/* Failed wipe wallet alert message */
"WipeWallet.failedMessage" = "Failed to wipe wallet.";
/* Failed wipe wallet alert title */
"WipeWallet.failedTitle" = "Failed";
/* Enter phrase to wipe wallet instruction. (Important to explain it is the CURRENT [this wallet's] paper key that needs to be entered). */
"WipeWallet.instruction" = "Please enter your recovery phrase to wipe this wallet from your device.";
/* Instructions for unlinking the wallet */
"WipeWallet.startMessage" = "Starting or recovering another wallet allows you to access and manage a different BRD wallet on this device.";
/* Start wipe wallet view warning */
"WipeWallet.startWarning" = "Your current wallet will be removed from this device. If you wish to restore it in the future, you will need to enter your Recovery Phrase.";
/* Unlink this wallet from this device. */
"WipeWallet.title" = "Start or Recover Another Wallet";
/* Wipe wallet button title */
"WipeWallet.wipe" = "Wipe";
/* Wiping activity message */
"WipeWallet.wiping" = "Wiping...";
/* Paper key instructions. */
"WritePaperPhrase.instruction" = "Write down each word in order and store it in a safe place.";
/* button label */
"WritePaperPhrase.next" = "Next";
/* button label */
"WritePaperPhrase.previous" = "Previous";
/* 1 of 3 */
"WritePaperPhrase.step" = "%1$li of %2$li";